<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="15" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="3051" started-at="2018-08-12T17:19:57Z" finished-at="2018-08-12T17:20:00Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="3051" started-at="2018-08-12T17:19:57Z" finished-at="2018-08-12T17:20:00Z">
      <class name="TestDemo3">
        <test-method status="PASS" signature="test1()[pri:0, instance:TestDemo3@6442b0a6]" name="test1" duration-ms="1000" started-at="2018-08-13T01:19:57Z" finished-at="2018-08-13T01:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="test2()[pri:0, instance:TestDemo3@6442b0a6]" name="test2" duration-ms="1001" started-at="2018-08-13T01:19:58Z" finished-at="2018-08-13T01:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:TestDemo3@6442b0a6]" name="test3" duration-ms="1000" started-at="2018-08-13T01:19:59Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- TestDemo3 -->
      <class name="TestDemo2">
        <test-method status="SKIP" signature="test02(java.lang.String, java.lang.String)[pri:0, instance:TestDemo2@4411d970]" name="test02" duration-ms="0" started-at="2018-08-13T01:19:57Z" finished-at="2018-08-13T01:19:57Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'ss' is required by @Test on method test02 but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'ss' is required by @Test on method test02 but has not been marked @Optional or defined

	at org.testng.internal.Parameters.createParameters(Parameters.java:154)
	at org.testng.internal.Parameters.createParameters(Parameters.java:361)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:451)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test02 -->
        <test-method status="SKIP" signature="test01(java.lang.String, java.lang.String)[pri:0, instance:TestDemo2@4411d970]" name="test01" duration-ms="0" started-at="2018-08-13T01:19:57Z" finished-at="2018-08-13T01:19:57Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Parameter 'xx' is required by @Test on method test01 but has not been marked @Optional or defined
]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Parameter 'xx' is required by @Test on method test01 but has not been marked @Optional or defined

	at org.testng.internal.Parameters.createParameters(Parameters.java:154)
	at org.testng.internal.Parameters.createParameters(Parameters.java:361)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:451)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1274)
	at org.testng.internal.Invoker.createParameters(Invoker.java:989)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1079)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test01 -->
        <test-method status="PASS" signature="test03(int, int)[pri:0, instance:TestDemo2@4411d970]" name="test03" duration-ms="3" started-at="2018-08-13T01:19:57Z" data-provider="provideNumbers" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method status="PASS" signature="test03(int, int)[pri:0, instance:TestDemo2@4411d970]" name="test03" duration-ms="0" started-at="2018-08-13T01:19:57Z" data-provider="provideNumbers" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[210]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method status="PASS" signature="test03(int, int)[pri:0, instance:TestDemo2@4411d970]" name="test03" duration-ms="0" started-at="2018-08-13T01:19:57Z" data-provider="provideNumbers" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[110]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test03 -->
        <test-method status="PASS" signature="test04(int, int)[pri:0, instance:TestDemo2@4411d970]" name="test04" duration-ms="1" started-at="2018-08-13T01:19:57Z" data-provider="dataProvider" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04 -->
        <test-method status="PASS" signature="test04(int, int)[pri:0, instance:TestDemo2@4411d970]" name="test04" duration-ms="0" started-at="2018-08-13T01:19:57Z" data-provider="dataProvider" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[200]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test04 -->
        <test-method status="PASS" signature="test05(java.lang.String, java.lang.String)[pri:0, instance:TestDemo2@4411d970]" name="test05" duration-ms="0" started-at="2018-08-13T01:19:57Z" data-provider="dataProvider" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@gmail.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05 -->
        <test-method status="PASS" signature="test05(java.lang.String, java.lang.String)[pri:0, instance:TestDemo2@4411d970]" name="test05" duration-ms="0" started-at="2018-08-13T01:19:57Z" data-provider="dataProvider" finished-at="2018-08-13T01:19:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[test@yahoo.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@yahoo.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test05 -->
      </class> <!-- TestDemo2 -->
      <class name="TestWn01">
        <test-method status="PASS" signature="BeforeSuite()[pri:0, instance:TestWn01@67b64c45]" name="BeforeSuite" is-config="true" duration-ms="12" started-at="2018-08-13T01:19:57Z" finished-at="2018-08-13T01:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeSuite -->
        <test-method status="PASS" signature="BeforeTest()[pri:0, instance:TestWn01@67b64c45]" name="BeforeTest" is-config="true" duration-ms="0" started-at="2018-08-13T01:19:57Z" finished-at="2018-08-13T01:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:TestWn01@67b64c45]" name="BeforeClass" is-config="true" duration-ms="1" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:TestWn01@67b64c45]" name="BeforeMethod" is-config="true" duration-ms="1" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="Test1()[pri:0, instance:TestWn01@67b64c45]" name="Test1" duration-ms="1" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:TestWn01@67b64c45]" name="AfterMethod" is-config="true" duration-ms="3" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="BeforeMethod()[pri:0, instance:TestWn01@67b64c45]" name="BeforeMethod" is-config="true" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method status="PASS" signature="Test2()[pri:0, instance:TestWn01@67b64c45]" name="Test2" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:TestWn01@67b64c45]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:TestWn01@67b64c45]" name="AfterClass" is-config="true" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="PASS" signature="AfterTest()[pri:0, instance:TestWn01@67b64c45]" name="AfterTest" is-config="true" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest -->
        <test-method status="PASS" signature="AfterSuite()[pri:0, instance:TestWn01@67b64c45]" name="AfterSuite" is-config="true" duration-ms="0" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterSuite -->
      </class> <!-- TestWn01 -->
      <class name="TestDeno">
        <test-method status="PASS" signature="divisionWithException()[pri:0, instance:TestDeno@60f82f98]" name="divisionWithException" duration-ms="1" started-at="2018-08-13T01:20:00Z" finished-at="2018-08-13T01:20:00Z">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[/ by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: / by zero
	at TestDeno.divisionWithException(TestDeno.java:7)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionWithException -->
      </class> <!-- TestDeno -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
